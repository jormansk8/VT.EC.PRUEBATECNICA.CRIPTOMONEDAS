{"ast":null,"code":"var _jsxFileName = \"E:\\\\VT.PRUEBA.CRIPTOMONEDAS\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Table, Button, Container, Modal, ModalHeader, ModalBody, FormGroup, ModalFooter } from \"reactstrap\";\nconst data = [{\n  id: 1,\n  personaje: \"Naruto\",\n  anime: \"Naruto\"\n}, {\n  id: 2,\n  personaje: \"Goku\",\n  anime: \"Dragon Ball\"\n}, {\n  id: 3,\n  personaje: \"Kenshin Himura\",\n  anime: \"Rurouni Kenshin\"\n}, {\n  id: 4,\n  personaje: \"Monkey D. Luffy\",\n  anime: \"One Piece\"\n}, {\n  id: 5,\n  personaje: \"Edward Elric\",\n  anime: \"Fullmetal Alchemist: Brotherhood\"\n}, {\n  id: 6,\n  personaje: \"Seto Kaiba\",\n  anime: \"Yu-Gi-Oh!\"\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: data,\n      modalActualizar: false,\n      modalInsertar: false,\n      form: {\n        id: \"\",\n        personaje: \"\",\n        anime: \"\"\n      }\n    };\n\n    this.mostrarModalActualizar = dato => {\n      this.setState({\n        form: dato,\n        modalActualizar: true\n      });\n    };\n\n    this.cerrarModalActualizar = () => {\n      this.setState({\n        modalActualizar: false\n      });\n    };\n\n    this.mostrarModalInsertar = () => {\n      this.setState({\n        modalInsertar: true\n      });\n    };\n\n    this.cerrarModalInsertar = () => {\n      this.setState({\n        modalInsertar: false\n      });\n    };\n\n    this.editar = dato => {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map(registro => {\n        if (dato.id == registro.id) {\n          arreglo[contador].personaje = dato.personaje;\n          arreglo[contador].anime = dato.anime;\n        }\n\n        contador++;\n      });\n      this.setState({\n        data: arreglo,\n        modalActualizar: false\n      });\n    };\n\n    this.eliminar = dato => {\n      var opcion = window.confirm(\"EstÃ¡s Seguro que deseas Eliminar el elemento \" + dato.id);\n\n      if (opcion == true) {\n        var contador = 0;\n        var arreglo = this.state.data;\n        arreglo.map(registro => {\n          if (dato.id == registro.id) {\n            arreglo.splice(contador, 1);\n          }\n\n          contador++;\n        });\n        this.setState({\n          data: arreglo,\n          modalActualizar: false\n        });\n      }\n    };\n\n    this.insertar = () => {\n      var valorNuevo = { ...this.state.form\n      };\n      valorNuevo.id = this.state.data.length + 1;\n      var lista = this.state.data;\n      lista.push(valorNuevo);\n      this.setState({\n        modalInsertar: false,\n        data: lista\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        form: { ...this.state.form,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.mostrarModalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Crear\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Personaje\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Anime\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Acci\\xF3n\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, this.state.data.map(dato => /*#__PURE__*/React.createElement(\"tr\", {\n      key: dato.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, dato.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, dato.personaje), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, dato.anime), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.mostrarModalActualizar(dato),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Editar\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.eliminar(dato),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Eliminar\"))))))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modalActualizar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Editar Registro\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"Id:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      readOnly: true,\n      type: \"text\",\n      value: this.state.form.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Personaje:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"personaje\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.form.personaje,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \"Anime:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"anime\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.form.anime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.editar(this.state.form),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \"Editar\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.cerrarModalActualizar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Cancelar\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modalInsertar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"Insertar Personaje\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Id:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      readOnly: true,\n      type: \"text\",\n      value: this.state.data.length + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, \"Personaje:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"personaje\",\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, \"Anime:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"anime\",\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.insertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, \"Insertar\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger\",\n      onClick: () => this.cerrarModalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, \"Cancelar\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/VT.PRUEBA.CRIPTOMONEDAS/src/App.js"],"names":["React","Table","Button","Container","Modal","ModalHeader","ModalBody","FormGroup","ModalFooter","data","id","personaje","anime","App","Component","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","opcion","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\n\nconst data = [\n  { id: 1, personaje: \"Naruto\", anime: \"Naruto\" },\n  { id: 2, personaje: \"Goku\", anime: \"Dragon Ball\" },\n  { id: 3, personaje: \"Kenshin Himura\", anime: \"Rurouni Kenshin\" },\n  { id: 4, personaje: \"Monkey D. Luffy\", anime: \"One Piece\" },\n  { id: 5, personaje: \"Edward Elric\", anime: \"Fullmetal Alchemist: Brotherhood\"},\n  { id: 6, personaje: \"Seto Kaiba\", anime: \"Yu-Gi-Oh!\" },\n];\n\nclass App extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      personaje: \"\",\n      anime: \"\",\n    },\n  };\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    var contador = 0;\n    var arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.id == registro.id) {\n        arreglo[contador].personaje = dato.personaje;\n        arreglo[contador].anime = dato.anime;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n  eliminar = (dato) => {\n    var opcion = window.confirm(\"EstÃ¡s Seguro que deseas Eliminar el elemento \"+dato.id);\n    if (opcion == true) {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n  insertar= ()=>{\n    var valorNuevo= {...this.state.form};\n    valorNuevo.id=this.state.data.length+1;\n    var lista= this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n    \n    return (\n      <>\n        <Container>\n        <br />\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Crear</Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Personaje</th>\n                <th>Anime</th>\n                <th>AcciÃ³n</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.id}>\n                  <td>{dato.id}</td>\n                  <td>{dato.personaje}</td>\n                  <td>{dato.anime}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n           <div><h3>Editar Registro</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n               Id:\n              </label>\n            \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.id}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Personaje: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"personaje\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.personaje}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Anime: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"anime\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.anime}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button\n              color=\"danger\"\n              onClick={() => this.cerrarModalActualizar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n           <div><h3>Insertar Personaje</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id: \n              </label>\n              \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length+1}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Personaje: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"personaje\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Anime: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"anime\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.insertar()}\n            >\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}